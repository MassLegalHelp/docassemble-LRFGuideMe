comment: |
  In this file the dictionaries in the data blocks define the content to be displayed throughout the interview. Through the template and attachment blocks, 'Label' provides the question text, and 'document' provides the screen output and the downloading file.
---
# Main issues inline templates - md files used for screen output
template: main_issues[i]['inline']
content file: 
  code: |
    (main_issues[i]['document'] + '_' + get_language() + '.md').replace('_en','')
---
# Attachment - docx files used for download 
attachment:
  name: ${main_issues[i]['label']}
  variable name: main_issues[i]['attachment']
  docx template file: 
    code: |
      (main_issues[i]['document'] + '_' + get_language() + '.docx').replace('_en','')
---
# Main Issues Dictionary
variable name: main_issues
use objects: True
data:
  bad_conditions:
    label: I am having problems with bad housing conditions   
    document: Bad_Conditions
  behind_on_rent:
    label: I am behind on rent.    
    document: Behind_on_rent
  complaints:
    label: I have an issue with my neighbor.    
    document: Neighbor_Complaints
  eviction:
    label: My landlord is trying to evict me.    
  subsidized_housing:
    label: I live in subsidized or public housing and I donâ€™t think I am paying the right rent.    
  rent_increase:
    label: My landlord is trying to increase rent.    
---
# Eviction inline templates - md files used for screen output
template: eviction_issues[i]['inline']
content file: 
  code: |    
    (eviction_issues[i]['document'] + '_' + get_language() + '.md').replace('_en','')
---
# Eviction Attachments - docx files used for download 
attachment:
  name: ${eviction_issues[i]['label']}
  filename: ${eviction_issues[i]['document']}
  variable name: eviction_issues[i]['attachment']
  docx template file:
    code: |
      (eviction_issues[i]['document'] + '_' + get_language() + '.docx').replace('_en','')
---
# Eviction Dictionary
variable name: eviction_issues
use objects: True
data:
 written_notice_no:
   label: Has your landlord sent you a written notice?   
   document: Eviction_Nothing_Received_in_Writing
 court_summons:
   label: Summons with a court date.   
   document: Eviction_Received_Summons_with_Court_Date
 letter_or_notice:
   label: Letter or notice telling you to leave by a certain date.   
   document: Eviction_Received_Letter_or_Notice
 hearing_served_yes:
   label: Have you gotten notice with a scheduled eviction?   
   document: Eviction_Had_hearing_and_lost_and_served
 hearing_served_no:
   label: Have you gotten notice with a scheduled eviction?   
   document: Eviction_Had_hearing_and_lost_and_not_served
 default_served_yes:
   label: Have you gotten notice with a scheduled eviction?
   document: Eviction_Missed_Court_Defaulted_and_Served
 default_served_no:
   label: Have you gotten notice with a scheduled eviction?
   document: Eviction_Missed_Court_and_Defaulted_and_not_served
 violation_agreement_yes:
   label: Have you been given papers saying that you are in violation of your agreement?
   document: Eviction_Served_with_Motion_in_Violation_of_Agreement
 violation_agreement_no:
   label: Have you been given papers saying that you are violating your agreement?
   document: Eviction_Cannot_keep_agreement
# The following 3 are only used as question label on the screen
 default_judgement:
   label: I missed my court date and a default judgement was entered.
 agreement:
   label: I made an agreement with the Landlord that I am now unable to keep.
 hearing:
   label: There was a hearing and I lost.
---
# Subsidized housing inline templates - md files used for screen output
template: subsidized_issues[i]['inline']
content file: 
  code: |    
    (subsidized_issues[i]['document'] + '_' + get_language() + '.md').replace('_en','')
---
# Subsidized Housing Attachments - docx files used for download 
attachment:
  name: ${subsidized_issues[i]['label']}
  filename: ${subsidized_issues[i]['document']}
  variable name: subsidized_issues[i]['attachment']
  docx template file:
    code: |
      (subsidized_issues[i]['document'] + '_' + get_language() + '.docx').replace('_en','')
---
# Subsidized Housing Dictionary
variable name: subsidized_issues
use objects: True
data:
  verification:
    label: My worker or property manager is asking me for verifications that I cannot get.    
    document: SubHousing_Cant_get_Verifications
  lost_income:
    label: I have told my worker or property manager that I have lost income and have heard nothing from them.
    document: SubHousing_Informed_Manager_and_No_response
  new_rent:
    label: My worker or property manager has sent me papers stating my new rent and I dont think it is right.
    document: SubHousing_notice_of_new_rent
---
# Rent Increase inline templates - md files used for screen output
template: rent_increase_issues[i]['inline']
content file: 
  code: |    
    (rent_increase_issues[i]['document'] + '_' + get_language() + '.md').replace('_en','')
---
# Rent Increase Attachments - docx files used for download 
attachment:
  name: ${rent_increase_issues[i]['label']}
  filename: ${rent_increase_issues[i]['document']}
  variable name: rent_increase_issues[i]['attachment']
  docx template file:
    code: |
      (rent_increase_issues[i]['document'] + '_' + get_language() + '.docx').replace('_en','')
---
# Rent Increase Dictionary
variable name: rent_increase_issues
use objects: True
data:
  tenancy_no_writing:
    label: I never had a written agreement.    
    document: Rent_Increase_No_written_agreement
  lease:
    label: I have a lease. A lease is a written agreement with a specific end date.    
    document: Rent_Increase_Lease
  section_8:
    label: I have a Section 8 or MRVP housing.
  voucher_yes:
    label: Yes, I have a mobile voucher.    
    document: Rent_Increase_Section_8_with_voucher
  voucher_no:
    label: No, I do not have a mobile voucher.    
    document: Rent_Increase_Section_8_no_voucher
  mobile_home:
    label: I live in a mobile home park.    
    document: Rent_Increase_Mobile_Home
  tenant_at_will:
    label: I am a tenant at will.  Sometimes called a month to month tenancy.    
    document: Rent_Increase_No_written_agreement
  public_housing:
    label:  I live in public housing.
    document: Rent_Increase_public_housing
---
# Disclaimer - used for screen output (for download it's embedded in each docx file.)
template: disclaimerOnline
content file: 
  code: |
    ('Disclaimer_' + get_language() + '.md').replace('_en','')
---
# Attachment Logic: Assembles relevant DOCX into PDF for download.
code: |
  relevant_files = []

  for issue in user_issues.true_values():  
    if issue == 'bad_conditions':
      relevant_files.append(main_issues['bad_conditions']['attachment'])
    if issue == 'behind_on_rent':
      relevant_files.append(main_issues['behind_on_rent']['attachment'])
    if issue == 'complaints':
      relevant_files.append(main_issues['complaints']['attachment'])
    if issue == 'eviction':
      if eviction_court == 'eviction_court_yes':
        if case_results == 'default_judgement':    
          if default_served == 'default_served_yes':  
            relevant_files.append(eviction_issues['default_served_yes']['attachment']) 
          if default_served == 'default_served_no':  
            relevant_files.append(eviction_issues['default_served_no']['attachment'])
        if case_results == 'agreement':  
          if violation_agreement == 'violation_agreement_yes': 
            relevant_files.append(eviction_issues['violation_agreement_yes']['attachment']) 
          if violation_agreement == 'violation_agreement_no':    
            relevant_files.append(eviction_issues['violation_agreement_no']['attachment'])
        if case_results == 'hearing':  
          if hearing_served == 'hearing_served_yes':   
            relevant_files.append(eviction_issues['hearing_served_yes']['attachment'])
          if hearing_served == 'hearing_served_no':   
            relevant_files.append(eviction_issues['hearing_served_no']['attachment'])  
      if eviction_court == 'eviction_court_no':  
        if written_notice == 'written_notice_no':  
          relevant_files.append(eviction_issues['written_notice_no']['attachment'])
        if written_notice == 'written_notice_yes':  
          if written_notice_type == 'court_summons':  
            relevant_files.append(eviction_issues['court_summons']['attachment'])
          if written_notice_type == 'letter_or_notice':
            relevant_files.append(eviction_issues['letter_or_notice']['attachment'])
    if issue == 'subsidized_housing':
      for issue in user_issues_subsidized.true_values():  
        relevant_files.append(subsidized_issues[issue]['attachment']) 
    if issue == 'rent_increase':
      if tenancy_type == 'tenancy_no_writing':
        relevant_files.append(rent_increase_issues['tenancy_no_writing']['attachment'])
      if tenancy_type == 'lease':
        relevant_files.append(rent_increase_issues['lease']['attachment'])
      if tenancy_type == 'section_8':
        if voucher == 'voucher_yes':
          relevant_files.append(rent_increase_issues['voucher_yes']['attachment'])
        if voucher == 'voucher_no':
          relevant_files.append(rent_increase_issues['voucher_no']['attachment'])
      if tenancy_type == 'mobile_home':
        relevant_files.append(rent_increase_issues['mobile_home']['attachment'])
      if tenancy_type == 'tenant_at_will':
        relevant_files.append(rent_increase_issues['tenant_at_will']['attachment'])
      if tenancy_type == 'public_housing':
        relevant_files.append(rent_increase_issues['public_housing']['attachment'])

  pdf_download = pdf_concatenate(relevant_files, filename='housing_guide_me.pdf')

